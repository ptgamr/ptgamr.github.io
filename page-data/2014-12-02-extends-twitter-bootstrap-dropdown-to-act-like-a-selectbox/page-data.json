{"componentChunkName":"component---src-templates-blog-post-js","path":"/2014-12-02-extends-twitter-bootstrap-dropdown-to-act-like-a-selectbox/","result":{"data":{"site":{"siteMetadata":{"title":"Anh Trinh's blog"}},"markdownRemark":{"id":"ff1f5b2f-8a4e-52c6-bca5-ab4b858df85d","excerpt":"Twitter Bootstrap comes with a very nice Javascript Plugin for Dropdown. What you just need to do is mark up the HTML, include the  and you’ll have a nicely…","html":"<p>Twitter Bootstrap comes with a very nice Javascript Plugin for Dropdown. What you just need to do is mark up the HTML, include the <code class=\"language-text\">bootstrap.js</code> and you’ll have a nicely dropdown working.</p>\n<p>I guess a lot of you had ever wanted that Dropdown acts like a selectbox, which means when you click to a menu item, that item will be selected, and the dropdown will be updated with that value.</p>\n<p>There is already a great plugin outthere:<a href=\"http://silviomoreto.github.io/bootstrap-select/\">bootstrap select</a>, which has a full featured set of what a Modern Selectbox should do. It also support you to search the options by passing <code class=\"language-text\">data-live-search=&quot;true&quot;</code> to the markup.</p>\n<p>This plugin convert a selectbox into a dropdown, which leads to these that you might not like:</p>\n<ul>\n<li>In an application where the HTML are rendered before the scripts running, user will first see the default selectbox when openning the page</li>\n<li>It is hard for us to customize the output of a selectbox. What if we want to achive this kind of button?\n<a href=\"http://getbootstrap.com/components/#btn-dropdowns-split\">http://getbootstrap.com/components/#btn-dropdowns-split</a>\nIt is just a different markdown for bootstrap’s dropdown.</li>\n</ul>\n<p>I want something work similar, but simpler. So i decided to extend the existing bootstrap dropdown plugins to add the select box behavior:</p>\n<div class=\"gatsby-highlight\" data-language=\"language-javascript\"><pre class=\"language-language-javascript\"><code class=\"language-language-javascript\">(function ($) {\n\n    var Dropdown = $.fn.dropdown.Constructor;\n    var toggle   = &#39;[data-toggle=&quot;dropdown&quot;]&#39;;\n\n    var getParent = function ($this) {\n        return $this.parent();\n    };\n\n    var select = function(e) {\n        if (event.type === &#39;keydown&#39; &amp;&amp; !/13/.test(e.which)) return;\n\n        var $this = $(this);\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        if ($this.is(&#39;.disabled, :disabled&#39;)) return;\n\n        var $parent  = getParent($this);\n        var isActive = $parent.hasClass(&#39;open&#39;);\n\n        var desc = &#39; li:not(.divider):visible a&#39;;\n        var $items = $parent.find(&#39;[data-select=&quot;true&quot;]&#39; + desc);\n\n        if (!$items.length) return;\n\n        var index = $items.index(e.target);\n\n        var $selected = $items.eq(index);\n            selectedText = $items.eq(index).text();\n\n        //previous selected\n        var $previousSelect = $this.find(&#39;.selected&#39;);\n\n        if (!$selected.hasClass(&#39;selected&#39;)) {\n            $selected.parent(&#39;li&#39;).addClass(&#39;selected&#39;);\n            $parent.find(&#39;.btn&#39;).first().text(selectedText);\n\n            $previousSelect.removeClass(&#39;selected&#39;);\n        }\n\n        //focus to the selectbox after select\n        $parent.find(toggle).dropdown(&#39;toggle&#39;).trigger(&#39;focus&#39;);\n\n        //trigger the event\n        $parent.trigger(e = $.Event(&#39;selected.bs.dropdown&#39;, {relatedTarget : this}));\n    };\n\n    $.extend(true, Dropdown.prototype, {select: select});\n\n    $(document)\n        .on(&#39;keydown.bs.dropdown.data-api&#39;, &#39;[data-select=&quot;true&quot;]&#39;, Dropdown.prototype.select)\n        .on(&#39;click.bs.dropdown.data-api&#39;, &#39;[data-select=&quot;true&quot;]&#39;, Dropdown.prototype.select);\n\n})(jQuery);</code></pre></div>\n<h3>What does the code do?</h3>\n<ul>\n<li>First it introduce a new data attribute: <code class=\"language-text\">data-select=&quot;true&quot;</code> on the <code class=\"language-text\">.dropdown-menu</code> list</li>\n<li>It bind a special handler called <code class=\"language-text\">select</code> to the <code class=\"language-text\">keydown</code> &#x26; <code class=\"language-text\">click</code> event on the <code class=\"language-text\">[data-select=&quot;true&quot;]</code></li>\n<li>This way, the original plugin will be kept untouched. Also its behavior. You only add the new functionality when you wanted</li>\n</ul>\n<h3>Usage &#x26; Contribution</h3>\n<p>I’ve created a <a href=\"https://github.com/ptgamr/bootstrap-dropdown-select-extension\">Github</a> repository for it. Please come and have a look. If you have any idea to improve it, don’t hesitate to fork it.</p>\n<p>Cheers.</p>","frontmatter":{"title":"Add Select Box feature to Twitter Bootstrap Dropdown","date":"December 01, 2014","description":null}}},"pageContext":{"slug":"/2014-12-02-extends-twitter-bootstrap-dropdown-to-act-like-a-selectbox/","previous":{"fields":{"slug":"/2014-11-29-bootstrap-3-tips-and-tricks/"},"frontmatter":{"title":"Bootstrap 3 Tips and Tricks"}},"next":{"fields":{"slug":"/2015-04-10-stop-whining-about-new-js-frameworks-2/"},"frontmatter":{"title":"Stop Whining About New JS Frameworks"}}}},"staticQueryHashes":["2841359383","916993862"]}