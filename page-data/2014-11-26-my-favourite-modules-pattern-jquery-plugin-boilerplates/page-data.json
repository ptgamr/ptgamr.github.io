{"componentChunkName":"component---src-templates-blog-post-js","path":"/2014-11-26-my-favourite-modules-pattern-jquery-plugin-boilerplates/","result":{"data":{"site":{"siteMetadata":{"title":"Anh Trinh's blog"}},"markdownRemark":{"id":"49576564-a509-5ef9-a053-87d4f60cc1df","excerpt":"The Reavealing Module Pattern JQuery Plugin Boilerplate","html":"<h3>The Reavealing Module Pattern</h3>\n<div class=\"gatsby-highlight\" data-language=\"language-javascript\"><pre class=\"language-language-javascript\"><code class=\"language-language-javascript\">    //define your app&#39;s namespace\n    var app = app || {};\n    \n    //your module inside &#39;app&#39; namespace\n    var app.myModule = (function ($) {\n\n        // &#39;this&#39; refers to global window\n\n        //private variable\n        var secret = {\n        \tmessage: &#39;I am pretty awesome&#39;\n        };\n        \n        //private function\n        var _tellTheSecret = function() {\n        \treturn secret.message;\n        }\n        \n        //public function\n        function init() {\n        \t//init the module base on the present of the element on the page\n            \n            if ($(&#39;#some-element&#39;).length) {\n            \n            \t//your initialize code here\n                //...\n            }\n        }\n\t\t\n        // variables and functions private unless attached to API below\n        // define the public API\n        var API = {};\n        API.init = init;\n\n        return API;\n    }(jQuery));</code></pre></div>\n<h3>JQuery Plugin Boilerplate</h3>\n<div class=\"gatsby-highlight\" data-language=\"language-javascript\"><pre class=\"language-language-javascript\"><code class=\"language-language-javascript\">    ;(function($) {\n        // wrap code within anonymous function: a private namespace\n\n        // replace &#39;MyPlugin&#39; and &#39;myplugin&#39; below in your own plugin...\n\n        // constructor function for the logical object bound to a\n        // single DOM element\n        function MyPlugin(elem, options) {\n\n            // remember this object as self\n            var self = this;\n            // remember the DOM element that this object is bound to\n            self.$elem = $(elem);\n\n            // default options\n            var defaults = {\n                msg: &quot;You clicked me!&quot;\n            };\n            // mix in the passed-in options with the default options\n            self.options = $.extend({}, defaults, options);\n\n            // just some private data\n            self.count = 1;\n\n            init();\n\n            // initialize this plugin\n            function init() {\n\n                // set click handler\n                self.$elem.click(click_handler);\n            }\n\n            // private click handler\n            function click_handler(event) {\n                alert(self.options.msg + &quot; &quot; + self.count);\n                self.count += 1;\n            }\n\n            // public method to change msg\n            function change_msg(msg) {\n                self.options.msg = msg;\n            }\n\n            // define the public API\n            var API = {};\n            API.change_msg = change_msg;\n            return API;\n        }\n\n        // attach the plugin to jquery namespace\n        $.fn.myplugin = function(options) {\n            return this.each(function() {\n                // prevent multiple instantiation\n                if (!$(this).data(&#39;myplugin&#39;))\n                    $(this).data(&#39;myplugin&#39;, new MyPlugin(this, options));\n            });\n        };\n    })(jQuery);</code></pre></div>","frontmatter":{"title":"My favourite Modules Pattern & JQuery Plugin boilerplates","date":"November 26, 2014","description":null}}},"pageContext":{"slug":"/2014-11-26-my-favourite-modules-pattern-jquery-plugin-boilerplates/","previous":{"fields":{"slug":"/2014-11-14-angularjs-differences-between-the-service-factory-and-provide-methods/"},"frontmatter":{"title":"AngularJS - Differences between the service(), factory(), and provide() methods"}},"next":{"fields":{"slug":"/2014-11-29-bootstrap-3-tips-and-tricks/"},"frontmatter":{"title":"Bootstrap 3 Tips and Tricks"}}}},"staticQueryHashes":["2841359383","916993862"]}